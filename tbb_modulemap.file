// m.out
// Generated by: modularize -module-map-path=m.out -root-module=tbb incs3

module tbb {
  module oneapi {
    module tbb {
      module blocked_range {
        header "oneapi/tbb/blocked_range.h"
        export *
      }
      module concurrent_queue {
        header "oneapi/tbb/concurrent_queue.h"
        export *
      }
      module concurrent_unordered_map {
        header "oneapi/tbb/concurrent_unordered_map.h"
        export *
      }
      module concurrent_unordered_set {
        header "oneapi/tbb/concurrent_unordered_set.h"
        export *
      }
      module concurrent_vector {
        header "oneapi/tbb/concurrent_vector.h"
        export *
      }
      module global_control {
        header "oneapi/tbb/global_control.h"
        export *
      }
      module parallel_for {
        header "oneapi/tbb/parallel_for.h"
        export *
      }
      module task {
        header "oneapi/tbb/task.h"
        export *
      }
      module task_arena {
        header "oneapi/tbb/task_arena.h"
        export *
      }
      module task_group {
        header "oneapi/tbb/task_group.h"
        export *
      }
      module task_scheduler_observer {
        header "oneapi/tbb/task_scheduler_observer.h"
        export *
      }
      module tbb_allocator {
        header "oneapi/tbb/tbb_allocator.h"
        export *
      }
    }
  }
  module tbb {
    module concurrent_hash_map {
      header "tbb/concurrent_hash_map.h"
      export *
    }
    module concurrent_queue {
      header "tbb/concurrent_queue.h"
      export *
    }
    module concurrent_unordered_map {
      header "tbb/concurrent_unordered_map.h"
      export *
    }
    module concurrent_unordered_set {
      header "tbb/concurrent_unordered_set.h"
      export *
    }
    module concurrent_vector {
      header "tbb/concurrent_vector.h"
      export *
    }
    module enumerable_thread_specific {
      header "tbb/enumerable_thread_specific.h"
      export *
    }
    module global_control {
      header "tbb/global_control.h"
      export *
    }
    module parallel_for {
      header "tbb/parallel_for.h"
      export *
    }
    module parallel_for_each {
      header "tbb/parallel_for_each.h"
      export *
    }
    module spin_mutex {
      header "tbb/spin_mutex.h"
      export *
    }
    module task_arena {
      header "tbb/task_arena.h"
      export *
    }
    module task_group {
      header "tbb/task_group.h"
      export *
    }
    module task_scheduler_observer {
      header "tbb/task_scheduler_observer.h"
      export *
    }
    module tbb {
      header "tbb/tbb.h"
      export *
    }
  }
}
